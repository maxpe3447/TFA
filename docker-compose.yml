version: '3.9'

networks:
  default:
     name: 'tfa'

volumes:
  tfa-pg:    
  tfa-logs: 
  tfa-prom:  
  tfa-grafana:

services:
  postgres:
    container_name: 'tfa-pg'
    image: 'postgres:latest'
    ports:
      - '5432:5432'
    environment:
      POSTGRES_PASSWORD: 'postgrespw'
    volumes:
      - tfa-pg:/var/lib/postgresql/data

  opensearch:
    container_name: 'tfa-os'
    image: 'opensearchproject/opensearch:2'
    ports:
      - '9200:9200'
      - '9600:9600'
    environment:
        discovery.type: 'single-node'
        plugins.security.disabled: 'true'
    volumes:
        - tfa-logs:/usr/share/opensearch/data

  opensearch-dashboards:
    container_name: 'tfa-osd'
    image: 'opensearchproject/opensearch-dashboards:latest'
    ports:
      - '5601:5601'
    environment:
      OPENSEARCH_HOSTS: '["http://tfa-os:9200"]'
      DISABLE_SECURITY_DASHBOARDS_PLUGIN: 'true'
    depends_on:
      - opensearch

  prometheus:
    container_name: 'tfa-prom'
    image: 'prom/prometheus'
    ports:
      - '9090:9090' 
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - tfa-prom:/prometheus  

  loki:
    container_name: 'tfa-loki'
    image: 'grafana/loki'
    ports:
      - '3100:3100'
    volumes:
      - ./loki-config.yaml:/etc/loki/local-config.yaml
    command: --config.file=/etc/loki/local-config.yaml

  grafana:
    container_name: 'tfa-grafana'
    image: 'grafana/grafana'
    restart: unless-stopped
    environment:
      GF_INSTALL_PLUGINS: 'grafana-clock-panel,grafana-simple-json-datasource'
    volumes:
      - tfa-grafana:/var/lib/grafana
    ports:
      - '3000:3000'
    depends_on: 
      - prometheus

  jeager:
    container_name: 'tfa-jeager'
    image: 'jaegertracing/all-in-one:1.60'
    environment:
      COLLECTOR_ZIPKIN_HOST_PORT: 9411
    ports:
      - '6831:6831/udp'
      - '6832:6832/udp'
      - '5778:5778'
      - '16686:16686'
      - '4317:4317'
      - '4318:4318'
      - '14250:14250'
      - '14268:14268'
      - '14269:14269'
      - '9411:9411'
  api:
    build:
      context: .
    container_name: 'tfa-api'
    ports:
      - '8080:8080'
    environment:
      ConnectionStrings__Postgres: 'Server=tfa-pg;Port=5432;Database=tfa;User Id=postgres;Password=postgrespw;'
      ConnectionStrings__Logs-loki: 'http://tfa-loki:3100'
      ConnectionStrings__Tracing: 'http://tfa-jeager:14268/api/traces'
      Authentication__Base64Key: 'OZAnTVuMoUGKXiYbyup1mIWsCIn2Q/TIxLnHNHo9zBs='



